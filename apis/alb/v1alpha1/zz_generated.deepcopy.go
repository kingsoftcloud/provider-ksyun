//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALBRuleSetObservation) DeepCopyInto(out *ALBRuleSetObservation) {
	*out = *in
	if in.ALBRuleType != nil {
		in, out := &in.ALBRuleType, &out.ALBRuleType
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleValue != nil {
		in, out := &in.ALBRuleValue, &out.ALBRuleValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALBRuleSetObservation.
func (in *ALBRuleSetObservation) DeepCopy() *ALBRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(ALBRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALBRuleSetParameters) DeepCopyInto(out *ALBRuleSetParameters) {
	*out = *in
	if in.ALBRuleType != nil {
		in, out := &in.ALBRuleType, &out.ALBRuleType
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleValue != nil {
		in, out := &in.ALBRuleValue, &out.ALBRuleValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALBRuleSetParameters.
func (in *ALBRuleSetParameters) DeepCopy() *ALBRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(ALBRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.CertAuthority != nil {
		in, out := &in.CertAuthority, &out.CertAuthority
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listener) DeepCopyInto(out *Listener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listener.
func (in *Listener) DeepCopy() *Listener {
	if in == nil {
		return nil
	}
	out := new(Listener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroup) DeepCopyInto(out *ListenerCertGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroup.
func (in *ListenerCertGroup) DeepCopy() *ListenerCertGroup {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerCertGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroupList) DeepCopyInto(out *ListenerCertGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListenerCertGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroupList.
func (in *ListenerCertGroupList) DeepCopy() *ListenerCertGroupList {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerCertGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroupObservation) DeepCopyInto(out *ListenerCertGroupObservation) {
	*out = *in
	if in.ALBListenerCertGroupID != nil {
		in, out := &in.ALBListenerCertGroupID, &out.ALBListenerCertGroupID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroupObservation.
func (in *ListenerCertGroupObservation) DeepCopy() *ListenerCertGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroupParameters) DeepCopyInto(out *ListenerCertGroupParameters) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroupParameters.
func (in *ListenerCertGroupParameters) DeepCopy() *ListenerCertGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroupSpec) DeepCopyInto(out *ListenerCertGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroupSpec.
func (in *ListenerCertGroupSpec) DeepCopy() *ListenerCertGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertGroupStatus) DeepCopyInto(out *ListenerCertGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertGroupStatus.
func (in *ListenerCertGroupStatus) DeepCopy() *ListenerCertGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerCertGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerList) DeepCopyInto(out *ListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerList.
func (in *ListenerList) DeepCopy() *ListenerList {
	if in == nil {
		return nil
	}
	out := new(ListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerObservation) DeepCopyInto(out *ListenerObservation) {
	*out = *in
	if in.ALBID != nil {
		in, out := &in.ALBID, &out.ALBID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerName != nil {
		in, out := &in.ALBListenerName, &out.ALBListenerName
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerState != nil {
		in, out := &in.ALBListenerState, &out.ALBListenerState
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProtocol != nil {
		in, out := &in.HTTPProtocol, &out.HTTPProtocol
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectALBListenerID != nil {
		in, out := &in.RedirectALBListenerID, &out.RedirectALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Session != nil {
		in, out := &in.Session, &out.Session
		*out = make([]SessionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSCipherPolicy != nil {
		in, out := &in.TLSCipherPolicy, &out.TLSCipherPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerObservation.
func (in *ListenerObservation) DeepCopy() *ListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerParameters) DeepCopyInto(out *ListenerParameters) {
	*out = *in
	if in.ALBID != nil {
		in, out := &in.ALBID, &out.ALBID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerName != nil {
		in, out := &in.ALBListenerName, &out.ALBListenerName
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerState != nil {
		in, out := &in.ALBListenerState, &out.ALBListenerState
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProtocol != nil {
		in, out := &in.HTTPProtocol, &out.HTTPProtocol
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectALBListenerID != nil {
		in, out := &in.RedirectALBListenerID, &out.RedirectALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Session != nil {
		in, out := &in.Session, &out.Session
		*out = make([]SessionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSCipherPolicy != nil {
		in, out := &in.TLSCipherPolicy, &out.TLSCipherPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerParameters.
func (in *ListenerParameters) DeepCopy() *ListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec) DeepCopyInto(out *ListenerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec.
func (in *ListenerSpec) DeepCopy() *ListenerSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroup) DeepCopyInto(out *RuleGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroup.
func (in *RuleGroup) DeepCopy() *RuleGroup {
	if in == nil {
		return nil
	}
	out := new(RuleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupList) DeepCopyInto(out *RuleGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RuleGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupList.
func (in *RuleGroupList) DeepCopy() *RuleGroupList {
	if in == nil {
		return nil
	}
	out := new(RuleGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupObservation) DeepCopyInto(out *RuleGroupObservation) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleGroupID != nil {
		in, out := &in.ALBRuleGroupID, &out.ALBRuleGroupID
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleGroupName != nil {
		in, out := &in.ALBRuleGroupName, &out.ALBRuleGroupName
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleSet != nil {
		in, out := &in.ALBRuleSet, &out.ALBRuleSet
		*out = make([]ALBRuleSetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServerGroupID != nil {
		in, out := &in.BackendServerGroupID, &out.BackendServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckState != nil {
		in, out := &in.HealthCheckState, &out.HealthCheckState
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.ListenerSync != nil {
		in, out := &in.ListenerSync, &out.ListenerSync
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupObservation.
func (in *RuleGroupObservation) DeepCopy() *RuleGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RuleGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupParameters) DeepCopyInto(out *RuleGroupParameters) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleGroupName != nil {
		in, out := &in.ALBRuleGroupName, &out.ALBRuleGroupName
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleSet != nil {
		in, out := &in.ALBRuleSet, &out.ALBRuleSet
		*out = make([]ALBRuleSetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServerGroupID != nil {
		in, out := &in.BackendServerGroupID, &out.BackendServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckState != nil {
		in, out := &in.HealthCheckState, &out.HealthCheckState
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.ListenerSync != nil {
		in, out := &in.ListenerSync, &out.ListenerSync
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupParameters.
func (in *RuleGroupParameters) DeepCopy() *RuleGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RuleGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupSpec) DeepCopyInto(out *RuleGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupSpec.
func (in *RuleGroupSpec) DeepCopy() *RuleGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RuleGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupStatus) DeepCopyInto(out *RuleGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupStatus.
func (in *RuleGroupStatus) DeepCopy() *RuleGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RuleGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionObservation) DeepCopyInto(out *SessionObservation) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionObservation.
func (in *SessionObservation) DeepCopy() *SessionObservation {
	if in == nil {
		return nil
	}
	out := new(SessionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionParameters) DeepCopyInto(out *SessionParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionParameters.
func (in *SessionParameters) DeepCopy() *SessionParameters {
	if in == nil {
		return nil
	}
	out := new(SessionParameters)
	in.DeepCopyInto(out)
	return out
}
