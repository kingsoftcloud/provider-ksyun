//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALBRuleSetObservation) DeepCopyInto(out *ALBRuleSetObservation) {
	*out = *in
	if in.ALBRuleType != nil {
		in, out := &in.ALBRuleType, &out.ALBRuleType
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleValue != nil {
		in, out := &in.ALBRuleValue, &out.ALBRuleValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALBRuleSetObservation.
func (in *ALBRuleSetObservation) DeepCopy() *ALBRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(ALBRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALBRuleSetParameters) DeepCopyInto(out *ALBRuleSetParameters) {
	*out = *in
	if in.ALBRuleType != nil {
		in, out := &in.ALBRuleType, &out.ALBRuleType
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleValue != nil {
		in, out := &in.ALBRuleValue, &out.ALBRuleValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALBRuleSetParameters.
func (in *ALBRuleSetParameters) DeepCopy() *ALBRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(ALBRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alb) DeepCopyInto(out *Alb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alb.
func (in *Alb) DeepCopy() *Alb {
	if in == nil {
		return nil
	}
	out := new(Alb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbList) DeepCopyInto(out *AlbList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbList.
func (in *AlbList) DeepCopy() *AlbList {
	if in == nil {
		return nil
	}
	out := new(AlbList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListener) DeepCopyInto(out *AlbListener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListener.
func (in *AlbListener) DeepCopy() *AlbListener {
	if in == nil {
		return nil
	}
	out := new(AlbListener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbListener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroup) DeepCopyInto(out *AlbListenerCertGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroup.
func (in *AlbListenerCertGroup) DeepCopy() *AlbListenerCertGroup {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbListenerCertGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroupList) DeepCopyInto(out *AlbListenerCertGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlbListenerCertGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroupList.
func (in *AlbListenerCertGroupList) DeepCopy() *AlbListenerCertGroupList {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbListenerCertGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroupObservation) DeepCopyInto(out *AlbListenerCertGroupObservation) {
	*out = *in
	if in.ALBListenerCertGroupID != nil {
		in, out := &in.ALBListenerCertGroupID, &out.ALBListenerCertGroupID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroupObservation.
func (in *AlbListenerCertGroupObservation) DeepCopy() *AlbListenerCertGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroupParameters) DeepCopyInto(out *AlbListenerCertGroupParameters) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerIDRef != nil {
		in, out := &in.ALBListenerIDRef, &out.ALBListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ALBListenerIDSelector != nil {
		in, out := &in.ALBListenerIDSelector, &out.ALBListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroupParameters.
func (in *AlbListenerCertGroupParameters) DeepCopy() *AlbListenerCertGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroupSpec) DeepCopyInto(out *AlbListenerCertGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroupSpec.
func (in *AlbListenerCertGroupSpec) DeepCopy() *AlbListenerCertGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerCertGroupStatus) DeepCopyInto(out *AlbListenerCertGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerCertGroupStatus.
func (in *AlbListenerCertGroupStatus) DeepCopy() *AlbListenerCertGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AlbListenerCertGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerList) DeepCopyInto(out *AlbListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlbListener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerList.
func (in *AlbListenerList) DeepCopy() *AlbListenerList {
	if in == nil {
		return nil
	}
	out := new(AlbListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerObservation) DeepCopyInto(out *AlbListenerObservation) {
	*out = *in
	if in.ALBID != nil {
		in, out := &in.ALBID, &out.ALBID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerName != nil {
		in, out := &in.ALBListenerName, &out.ALBListenerName
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerState != nil {
		in, out := &in.ALBListenerState, &out.ALBListenerState
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProtocol != nil {
		in, out := &in.HTTPProtocol, &out.HTTPProtocol
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectALBListenerID != nil {
		in, out := &in.RedirectALBListenerID, &out.RedirectALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Session != nil {
		in, out := &in.Session, &out.Session
		*out = make([]SessionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSCipherPolicy != nil {
		in, out := &in.TLSCipherPolicy, &out.TLSCipherPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerObservation.
func (in *AlbListenerObservation) DeepCopy() *AlbListenerObservation {
	if in == nil {
		return nil
	}
	out := new(AlbListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerParameters) DeepCopyInto(out *AlbListenerParameters) {
	*out = *in
	if in.ALBID != nil {
		in, out := &in.ALBID, &out.ALBID
		*out = new(string)
		**out = **in
	}
	if in.ALBIDRef != nil {
		in, out := &in.ALBIDRef, &out.ALBIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ALBIDSelector != nil {
		in, out := &in.ALBIDSelector, &out.ALBIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ALBListenerName != nil {
		in, out := &in.ALBListenerName, &out.ALBListenerName
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerState != nil {
		in, out := &in.ALBListenerState, &out.ALBListenerState
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProtocol != nil {
		in, out := &in.HTTPProtocol, &out.HTTPProtocol
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectALBListenerID != nil {
		in, out := &in.RedirectALBListenerID, &out.RedirectALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.Session != nil {
		in, out := &in.Session, &out.Session
		*out = make([]SessionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSCipherPolicy != nil {
		in, out := &in.TLSCipherPolicy, &out.TLSCipherPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerParameters.
func (in *AlbListenerParameters) DeepCopy() *AlbListenerParameters {
	if in == nil {
		return nil
	}
	out := new(AlbListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerSpec) DeepCopyInto(out *AlbListenerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerSpec.
func (in *AlbListenerSpec) DeepCopy() *AlbListenerSpec {
	if in == nil {
		return nil
	}
	out := new(AlbListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbListenerStatus) DeepCopyInto(out *AlbListenerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbListenerStatus.
func (in *AlbListenerStatus) DeepCopy() *AlbListenerStatus {
	if in == nil {
		return nil
	}
	out := new(AlbListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbObservation) DeepCopyInto(out *AlbObservation) {
	*out = *in
	if in.ALBName != nil {
		in, out := &in.ALBName, &out.ALBName
		*out = new(string)
		**out = **in
	}
	if in.ALBType != nil {
		in, out := &in.ALBType, &out.ALBType
		*out = new(string)
		**out = **in
	}
	if in.ALBVersion != nil {
		in, out := &in.ALBVersion, &out.ALBVersion
		*out = new(string)
		**out = **in
	}
	if in.ChargeType != nil {
		in, out := &in.ChargeType, &out.ChargeType
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.EnabledLog != nil {
		in, out := &in.EnabledLog, &out.EnabledLog
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.KlogInfo != nil {
		in, out := &in.KlogInfo, &out.KlogInfo
		*out = make([]KlogInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbObservation.
func (in *AlbObservation) DeepCopy() *AlbObservation {
	if in == nil {
		return nil
	}
	out := new(AlbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbParameters) DeepCopyInto(out *AlbParameters) {
	*out = *in
	if in.ALBName != nil {
		in, out := &in.ALBName, &out.ALBName
		*out = new(string)
		**out = **in
	}
	if in.ALBType != nil {
		in, out := &in.ALBType, &out.ALBType
		*out = new(string)
		**out = **in
	}
	if in.ALBVersion != nil {
		in, out := &in.ALBVersion, &out.ALBVersion
		*out = new(string)
		**out = **in
	}
	if in.ChargeType != nil {
		in, out := &in.ChargeType, &out.ChargeType
		*out = new(string)
		**out = **in
	}
	if in.EnabledLog != nil {
		in, out := &in.EnabledLog, &out.EnabledLog
		*out = new(bool)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.KlogInfo != nil {
		in, out := &in.KlogInfo, &out.KlogInfo
		*out = make([]KlogInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbParameters.
func (in *AlbParameters) DeepCopy() *AlbParameters {
	if in == nil {
		return nil
	}
	out := new(AlbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroup) DeepCopyInto(out *AlbRuleGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroup.
func (in *AlbRuleGroup) DeepCopy() *AlbRuleGroup {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbRuleGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroupList) DeepCopyInto(out *AlbRuleGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlbRuleGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroupList.
func (in *AlbRuleGroupList) DeepCopy() *AlbRuleGroupList {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbRuleGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroupObservation) DeepCopyInto(out *AlbRuleGroupObservation) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleGroupID != nil {
		in, out := &in.ALBRuleGroupID, &out.ALBRuleGroupID
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleGroupName != nil {
		in, out := &in.ALBRuleGroupName, &out.ALBRuleGroupName
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleSet != nil {
		in, out := &in.ALBRuleSet, &out.ALBRuleSet
		*out = make([]ALBRuleSetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServerGroupID != nil {
		in, out := &in.BackendServerGroupID, &out.BackendServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckState != nil {
		in, out := &in.HealthCheckState, &out.HealthCheckState
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.ListenerSync != nil {
		in, out := &in.ListenerSync, &out.ListenerSync
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroupObservation.
func (in *AlbRuleGroupObservation) DeepCopy() *AlbRuleGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroupParameters) DeepCopyInto(out *AlbRuleGroupParameters) {
	*out = *in
	if in.ALBListenerID != nil {
		in, out := &in.ALBListenerID, &out.ALBListenerID
		*out = new(string)
		**out = **in
	}
	if in.ALBListenerIDRef != nil {
		in, out := &in.ALBListenerIDRef, &out.ALBListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ALBListenerIDSelector != nil {
		in, out := &in.ALBListenerIDSelector, &out.ALBListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ALBRuleGroupName != nil {
		in, out := &in.ALBRuleGroupName, &out.ALBRuleGroupName
		*out = new(string)
		**out = **in
	}
	if in.ALBRuleSet != nil {
		in, out := &in.ALBRuleSet, &out.ALBRuleSet
		*out = make([]ALBRuleSetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServerGroupID != nil {
		in, out := &in.BackendServerGroupID, &out.BackendServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.BackendServerGroupIDRef != nil {
		in, out := &in.BackendServerGroupIDRef, &out.BackendServerGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServerGroupIDSelector != nil {
		in, out := &in.BackendServerGroupIDSelector, &out.BackendServerGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckState != nil {
		in, out := &in.HealthCheckState, &out.HealthCheckState
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.ListenerSync != nil {
		in, out := &in.ListenerSync, &out.ListenerSync
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroupParameters.
func (in *AlbRuleGroupParameters) DeepCopy() *AlbRuleGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroupSpec) DeepCopyInto(out *AlbRuleGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroupSpec.
func (in *AlbRuleGroupSpec) DeepCopy() *AlbRuleGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbRuleGroupStatus) DeepCopyInto(out *AlbRuleGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbRuleGroupStatus.
func (in *AlbRuleGroupStatus) DeepCopy() *AlbRuleGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AlbRuleGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbSpec) DeepCopyInto(out *AlbSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbSpec.
func (in *AlbSpec) DeepCopy() *AlbSpec {
	if in == nil {
		return nil
	}
	out := new(AlbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbStatus) DeepCopyInto(out *AlbStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbStatus.
func (in *AlbStatus) DeepCopy() *AlbStatus {
	if in == nil {
		return nil
	}
	out := new(AlbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.CertAuthority != nil {
		in, out := &in.CertAuthority, &out.CertAuthority
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KlogInfoObservation) DeepCopyInto(out *KlogInfoObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.LogPoolName != nil {
		in, out := &in.LogPoolName, &out.LogPoolName
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KlogInfoObservation.
func (in *KlogInfoObservation) DeepCopy() *KlogInfoObservation {
	if in == nil {
		return nil
	}
	out := new(KlogInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KlogInfoParameters) DeepCopyInto(out *KlogInfoParameters) {
	*out = *in
	if in.LogPoolName != nil {
		in, out := &in.LogPoolName, &out.LogPoolName
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KlogInfoParameters.
func (in *KlogInfoParameters) DeepCopy() *KlogInfoParameters {
	if in == nil {
		return nil
	}
	out := new(KlogInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionObservation) DeepCopyInto(out *SessionObservation) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionObservation.
func (in *SessionObservation) DeepCopy() *SessionObservation {
	if in == nil {
		return nil
	}
	out := new(SessionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionParameters) DeepCopyInto(out *SessionParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieType != nil {
		in, out := &in.CookieType, &out.CookieType
		*out = new(string)
		**out = **in
	}
	if in.SessionPersistencePeriod != nil {
		in, out := &in.SessionPersistencePeriod, &out.SessionPersistencePeriod
		*out = new(float64)
		**out = **in
	}
	if in.SessionState != nil {
		in, out := &in.SessionState, &out.SessionState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionParameters.
func (in *SessionParameters) DeepCopy() *SessionParameters {
	if in == nil {
		return nil
	}
	out := new(SessionParameters)
	in.DeepCopyInto(out)
	return out
}
