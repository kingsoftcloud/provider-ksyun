//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicy) DeepCopyInto(out *AutoSnapshotPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicy.
func (in *AutoSnapshotPolicy) DeepCopy() *AutoSnapshotPolicy {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoSnapshotPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicyList) DeepCopyInto(out *AutoSnapshotPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoSnapshotPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicyList.
func (in *AutoSnapshotPolicyList) DeepCopy() *AutoSnapshotPolicyList {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoSnapshotPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicyObservation) DeepCopyInto(out *AutoSnapshotPolicyObservation) {
	*out = *in
	if in.AutoSnapshotDate != nil {
		in, out := &in.AutoSnapshotDate, &out.AutoSnapshotDate
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.AutoSnapshotPolicyID != nil {
		in, out := &in.AutoSnapshotPolicyID, &out.AutoSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.AutoSnapshotTime != nil {
		in, out := &in.AutoSnapshotTime, &out.AutoSnapshotTime
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetentionTime != nil {
		in, out := &in.RetentionTime, &out.RetentionTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicyObservation.
func (in *AutoSnapshotPolicyObservation) DeepCopy() *AutoSnapshotPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicyParameters) DeepCopyInto(out *AutoSnapshotPolicyParameters) {
	*out = *in
	if in.AutoSnapshotDate != nil {
		in, out := &in.AutoSnapshotDate, &out.AutoSnapshotDate
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.AutoSnapshotTime != nil {
		in, out := &in.AutoSnapshotTime, &out.AutoSnapshotTime
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetentionTime != nil {
		in, out := &in.RetentionTime, &out.RetentionTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicyParameters.
func (in *AutoSnapshotPolicyParameters) DeepCopy() *AutoSnapshotPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicySpec) DeepCopyInto(out *AutoSnapshotPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicySpec.
func (in *AutoSnapshotPolicySpec) DeepCopy() *AutoSnapshotPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotPolicyStatus) DeepCopyInto(out *AutoSnapshotPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotPolicyStatus.
func (in *AutoSnapshotPolicyStatus) DeepCopy() *AutoSnapshotPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociation) DeepCopyInto(out *AutoSnapshotVolumeAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociation.
func (in *AutoSnapshotVolumeAssociation) DeepCopy() *AutoSnapshotVolumeAssociation {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoSnapshotVolumeAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociationList) DeepCopyInto(out *AutoSnapshotVolumeAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoSnapshotVolumeAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociationList.
func (in *AutoSnapshotVolumeAssociationList) DeepCopy() *AutoSnapshotVolumeAssociationList {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoSnapshotVolumeAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociationObservation) DeepCopyInto(out *AutoSnapshotVolumeAssociationObservation) {
	*out = *in
	if in.AttachVolumeID != nil {
		in, out := &in.AttachVolumeID, &out.AttachVolumeID
		*out = new(string)
		**out = **in
	}
	if in.AutoSnapshotPolicyID != nil {
		in, out := &in.AutoSnapshotPolicyID, &out.AutoSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociationObservation.
func (in *AutoSnapshotVolumeAssociationObservation) DeepCopy() *AutoSnapshotVolumeAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociationParameters) DeepCopyInto(out *AutoSnapshotVolumeAssociationParameters) {
	*out = *in
	if in.AttachVolumeID != nil {
		in, out := &in.AttachVolumeID, &out.AttachVolumeID
		*out = new(string)
		**out = **in
	}
	if in.AttachVolumeIDRef != nil {
		in, out := &in.AttachVolumeIDRef, &out.AttachVolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachVolumeIDSelector != nil {
		in, out := &in.AttachVolumeIDSelector, &out.AttachVolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoSnapshotPolicyID != nil {
		in, out := &in.AutoSnapshotPolicyID, &out.AutoSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.AutoSnapshotPolicyIDRef != nil {
		in, out := &in.AutoSnapshotPolicyIDRef, &out.AutoSnapshotPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoSnapshotPolicyIDSelector != nil {
		in, out := &in.AutoSnapshotPolicyIDSelector, &out.AutoSnapshotPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociationParameters.
func (in *AutoSnapshotVolumeAssociationParameters) DeepCopy() *AutoSnapshotVolumeAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociationSpec) DeepCopyInto(out *AutoSnapshotVolumeAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociationSpec.
func (in *AutoSnapshotVolumeAssociationSpec) DeepCopy() *AutoSnapshotVolumeAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoSnapshotVolumeAssociationStatus) DeepCopyInto(out *AutoSnapshotVolumeAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoSnapshotVolumeAssociationStatus.
func (in *AutoSnapshotVolumeAssociationStatus) DeepCopy() *AutoSnapshotVolumeAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(AutoSnapshotVolumeAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataDisksObservation) DeepCopyInto(out *DataDisksObservation) {
	*out = *in
	if in.DeleteWithInstance != nil {
		in, out := &in.DeleteWithInstance, &out.DeleteWithInstance
		*out = new(bool)
		**out = **in
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskSnapshotID != nil {
		in, out := &in.DiskSnapshotID, &out.DiskSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataDisksObservation.
func (in *DataDisksObservation) DeepCopy() *DataDisksObservation {
	if in == nil {
		return nil
	}
	out := new(DataDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataDisksParameters) DeepCopyInto(out *DataDisksParameters) {
	*out = *in
	if in.DeleteWithInstance != nil {
		in, out := &in.DeleteWithInstance, &out.DeleteWithInstance
		*out = new(bool)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskSnapshotID != nil {
		in, out := &in.DiskSnapshotID, &out.DiskSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataDisksParameters.
func (in *DataDisksParameters) DeepCopy() *DataDisksParameters {
	if in == nil {
		return nil
	}
	out := new(DataDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroup) DeepCopyInto(out *DataGuardGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroup.
func (in *DataGuardGroup) DeepCopy() *DataGuardGroup {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataGuardGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroupList) DeepCopyInto(out *DataGuardGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataGuardGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroupList.
func (in *DataGuardGroupList) DeepCopy() *DataGuardGroupList {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataGuardGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroupObservation) DeepCopyInto(out *DataGuardGroupObservation) {
	*out = *in
	if in.DataGuardCapacity != nil {
		in, out := &in.DataGuardCapacity, &out.DataGuardCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DataGuardID != nil {
		in, out := &in.DataGuardID, &out.DataGuardID
		*out = new(string)
		**out = **in
	}
	if in.DataGuardLevel != nil {
		in, out := &in.DataGuardLevel, &out.DataGuardLevel
		*out = new(string)
		**out = **in
	}
	if in.DataGuardName != nil {
		in, out := &in.DataGuardName, &out.DataGuardName
		*out = new(string)
		**out = **in
	}
	if in.DataGuardType != nil {
		in, out := &in.DataGuardType, &out.DataGuardType
		*out = new(string)
		**out = **in
	}
	if in.DataGuardUsedSize != nil {
		in, out := &in.DataGuardUsedSize, &out.DataGuardUsedSize
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroupObservation.
func (in *DataGuardGroupObservation) DeepCopy() *DataGuardGroupObservation {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroupParameters) DeepCopyInto(out *DataGuardGroupParameters) {
	*out = *in
	if in.DataGuardName != nil {
		in, out := &in.DataGuardName, &out.DataGuardName
		*out = new(string)
		**out = **in
	}
	if in.DataGuardType != nil {
		in, out := &in.DataGuardType, &out.DataGuardType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroupParameters.
func (in *DataGuardGroupParameters) DeepCopy() *DataGuardGroupParameters {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroupSpec) DeepCopyInto(out *DataGuardGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroupSpec.
func (in *DataGuardGroupSpec) DeepCopy() *DataGuardGroupSpec {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataGuardGroupStatus) DeepCopyInto(out *DataGuardGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataGuardGroupStatus.
func (in *DataGuardGroupStatus) DeepCopy() *DataGuardGroupStatus {
	if in == nil {
		return nil
	}
	out := new(DataGuardGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionNetworkInterfaceObservation) DeepCopyInto(out *ExtensionNetworkInterfaceObservation) {
	*out = *in
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionNetworkInterfaceObservation.
func (in *ExtensionNetworkInterfaceObservation) DeepCopy() *ExtensionNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(ExtensionNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionNetworkInterfaceParameters) DeepCopyInto(out *ExtensionNetworkInterfaceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionNetworkInterfaceParameters.
func (in *ExtensionNetworkInterfaceParameters) DeepCopy() *ExtensionNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(ExtensionNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AutoCreateEBS != nil {
		in, out := &in.AutoCreateEBS, &out.AutoCreateEBS
		*out = new(bool)
		**out = **in
	}
	if in.ChargeType != nil {
		in, out := &in.ChargeType, &out.ChargeType
		*out = new(string)
		**out = **in
	}
	if in.DataDiskGb != nil {
		in, out := &in.DataDiskGb, &out.DataDiskGb
		*out = new(float64)
		**out = **in
	}
	if in.DataDisks != nil {
		in, out := &in.DataDisks, &out.DataDisks
		*out = make([]DataDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataGuardID != nil {
		in, out := &in.DataGuardID, &out.DataGuardID
		*out = new(string)
		**out = **in
	}
	if in.Dns1 != nil {
		in, out := &in.Dns1, &out.Dns1
		*out = new(string)
		**out = **in
	}
	if in.Dns2 != nil {
		in, out := &in.Dns2, &out.Dns2
		*out = new(string)
		**out = **in
	}
	if in.ExtensionNetworkInterface != nil {
		in, out := &in.ExtensionNetworkInterface, &out.ExtensionNetworkInterface
		*out = make([]ExtensionNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceReinstallSystem != nil {
		in, out := &in.ForceReinstallSystem, &out.ForceReinstallSystem
		*out = new(bool)
		**out = **in
	}
	if in.HasModifyKeys != nil {
		in, out := &in.HasModifyKeys, &out.HasModifyKeys
		*out = new(bool)
		**out = **in
	}
	if in.HasModifyPassword != nil {
		in, out := &in.HasModifyPassword, &out.HasModifyPassword
		*out = new(bool)
		**out = **in
	}
	if in.HasModifySystemDisk != nil {
		in, out := &in.HasModifySystemDisk, &out.HasModifySystemDisk
		*out = new(bool)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleName != nil {
		in, out := &in.IAMRoleName, &out.IAMRoleName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstanceStatus != nil {
		in, out := &in.InstanceStatus, &out.InstanceStatus
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeepImageLogin != nil {
		in, out := &in.KeepImageLogin, &out.KeepImageLogin
		*out = new(bool)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalVolumeSnapshotID != nil {
		in, out := &in.LocalVolumeSnapshotID, &out.LocalVolumeSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.PurchaseTime != nil {
		in, out := &in.PurchaseTime, &out.PurchaseTime
		*out = new(float64)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SystemDisk != nil {
		in, out := &in.SystemDisk, &out.SystemDisk
		*out = make([]SystemDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AutoCreateEBS != nil {
		in, out := &in.AutoCreateEBS, &out.AutoCreateEBS
		*out = new(bool)
		**out = **in
	}
	if in.ChargeType != nil {
		in, out := &in.ChargeType, &out.ChargeType
		*out = new(string)
		**out = **in
	}
	if in.DataDiskGb != nil {
		in, out := &in.DataDiskGb, &out.DataDiskGb
		*out = new(float64)
		**out = **in
	}
	if in.DataDisks != nil {
		in, out := &in.DataDisks, &out.DataDisks
		*out = make([]DataDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataGuardID != nil {
		in, out := &in.DataGuardID, &out.DataGuardID
		*out = new(string)
		**out = **in
	}
	if in.DataGuardIDRef != nil {
		in, out := &in.DataGuardIDRef, &out.DataGuardIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataGuardIDSelector != nil {
		in, out := &in.DataGuardIDSelector, &out.DataGuardIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dns1 != nil {
		in, out := &in.Dns1, &out.Dns1
		*out = new(string)
		**out = **in
	}
	if in.Dns2 != nil {
		in, out := &in.Dns2, &out.Dns2
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceReinstallSystem != nil {
		in, out := &in.ForceReinstallSystem, &out.ForceReinstallSystem
		*out = new(bool)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleName != nil {
		in, out := &in.IAMRoleName, &out.IAMRoleName
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstancePasswordSecretRef != nil {
		in, out := &in.InstancePasswordSecretRef, &out.InstancePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.InstanceStatus != nil {
		in, out := &in.InstanceStatus, &out.InstanceStatus
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeepImageLogin != nil {
		in, out := &in.KeepImageLogin, &out.KeepImageLogin
		*out = new(bool)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalVolumeSnapshotID != nil {
		in, out := &in.LocalVolumeSnapshotID, &out.LocalVolumeSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.PurchaseTime != nil {
		in, out := &in.PurchaseTime, &out.PurchaseTime
		*out = new(float64)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemDisk != nil {
		in, out := &in.SystemDisk, &out.SystemDisk
		*out = make([]SystemDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachment) DeepCopyInto(out *KecNetworkInterfaceAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachment.
func (in *KecNetworkInterfaceAttachment) DeepCopy() *KecNetworkInterfaceAttachment {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KecNetworkInterfaceAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachmentList) DeepCopyInto(out *KecNetworkInterfaceAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KecNetworkInterfaceAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachmentList.
func (in *KecNetworkInterfaceAttachmentList) DeepCopy() *KecNetworkInterfaceAttachmentList {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KecNetworkInterfaceAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachmentObservation) DeepCopyInto(out *KecNetworkInterfaceAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceType != nil {
		in, out := &in.NetworkInterfaceType, &out.NetworkInterfaceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachmentObservation.
func (in *KecNetworkInterfaceAttachmentObservation) DeepCopy() *KecNetworkInterfaceAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachmentParameters) DeepCopyInto(out *KecNetworkInterfaceAttachmentParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachmentParameters.
func (in *KecNetworkInterfaceAttachmentParameters) DeepCopy() *KecNetworkInterfaceAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachmentSpec) DeepCopyInto(out *KecNetworkInterfaceAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachmentSpec.
func (in *KecNetworkInterfaceAttachmentSpec) DeepCopy() *KecNetworkInterfaceAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KecNetworkInterfaceAttachmentStatus) DeepCopyInto(out *KecNetworkInterfaceAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KecNetworkInterfaceAttachmentStatus.
func (in *KecNetworkInterfaceAttachmentStatus) DeepCopy() *KecNetworkInterfaceAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(KecNetworkInterfaceAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemDiskObservation) DeepCopyInto(out *SystemDiskObservation) {
	*out = *in
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemDiskObservation.
func (in *SystemDiskObservation) DeepCopy() *SystemDiskObservation {
	if in == nil {
		return nil
	}
	out := new(SystemDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemDiskParameters) DeepCopyInto(out *SystemDiskParameters) {
	*out = *in
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemDiskParameters.
func (in *SystemDiskParameters) DeepCopy() *SystemDiskParameters {
	if in == nil {
		return nil
	}
	out := new(SystemDiskParameters)
	in.DeepCopyInto(out)
	return out
}
