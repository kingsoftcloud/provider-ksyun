/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DataDisksObservation struct {

	// Delete this data disk when the instance is destroyed. It only works on EBS disk.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// ID of the disk.
	DiskID *string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// Data disk size. value range: [10, 16000].
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// When the cloud disk opens, the snapshot id is entered.
	DiskSnapshotID *string `json:"diskSnapshotId,omitempty" tf:"disk_snapshot_id,omitempty"`

	// Data disk type.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`
}

type DataDisksParameters struct {

	// Delete this data disk when the instance is destroyed. It only works on EBS disk.
	// +kubebuilder:validation:Optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Data disk size. value range: [10, 16000].
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// When the cloud disk opens, the snapshot id is entered.
	// +kubebuilder:validation:Optional
	DiskSnapshotID *string `json:"diskSnapshotId,omitempty" tf:"disk_snapshot_id,omitempty"`

	// Data disk type.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`
}

type ExtensionNetworkInterfaceObservation struct {
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`
}

type ExtensionNetworkInterfaceParameters struct {
}

type InstanceObservation struct {

	// Whether to create EBS volumes from snapshots in the custom image, default is false.
	AutoCreateEBS *bool `json:"autoCreateEbs,omitempty" tf:"auto_create_ebs,omitempty"`

	// charge type of the instance.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// The size of the local SSD disk.
	DataDiskGb *float64 `json:"dataDiskGb,omitempty" tf:"data_disk_gb,omitempty"`

	DataDisks []DataDisksObservation `json:"dataDisks,omitempty" tf:"data_disks,omitempty"`

	// Add instance being created to a disaster tolerance group. It will be quit the disaster tolerance group, if this field change to null.
	DataGuardID *string `json:"dataGuardId,omitempty" tf:"data_guard_id,omitempty"`

	// DNS1 of the primary network interface.
	Dns1 *string `json:"dns1,omitempty" tf:"dns1,omitempty"`

	// DNS2 of the primary network interface.
	Dns2 *string `json:"dns2,omitempty" tf:"dns2,omitempty"`

	// extension network interface information.
	ExtensionNetworkInterface []ExtensionNetworkInterfaceObservation `json:"extensionNetworkInterface,omitempty" tf:"extension_network_interface,omitempty"`

	// Indicate whether to delete instance directly or not.
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// Indicate whether to reinstall system.
	ForceReinstallSystem *bool `json:"forceReinstallSystem,omitempty" tf:"force_reinstall_system,omitempty"`

	// whether the certificate key has modified.
	HasModifyKeys *bool `json:"hasModifyKeys,omitempty" tf:"has_modify_keys,omitempty"`

	// whether the password has modified.
	HasModifyPassword *bool `json:"hasModifyPassword,omitempty" tf:"has_modify_password,omitempty"`

	// whether the system disk has modified.
	HasModifySystemDisk *bool `json:"hasModifySystemDisk,omitempty" tf:"has_modify_system_disk,omitempty"`

	// The hostname of the instance. only effective when image support cloud-init.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// name of iam role.
	IAMRoleName *string `json:"iamRoleName,omitempty" tf:"iam_role_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID for the image to use for the instance.
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// ID of the instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The name of instance, which contains 2-64 characters and only support Chinese, English, numbers.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The state of instance.
	InstanceStatus *string `json:"instanceStatus,omitempty" tf:"instance_status,omitempty"`

	// The type of instance to start. <br> - NOTE: it's may trigger this instance to power off, if instance type will be demotion.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Keep the initial settings of the custom image.
	KeepImageLogin *bool `json:"keepImageLogin,omitempty" tf:"keep_image_login,omitempty"`

	// The certificate id of the instance.
	KeyID []*string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// When the local data disk opens, the snapshot id is entered.
	LocalVolumeSnapshotID *string `json:"localVolumeSnapshotId,omitempty" tf:"local_volume_snapshot_id,omitempty"`

	// ID of the network interface.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Instance private IP address can be specified when you creating new instance.
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// The project instance belongs to.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The duration that you will buy the resource.
	PurchaseTime *float64 `json:"purchaseTime,omitempty" tf:"purchase_time,omitempty"`

	// Security Group to associate with.
	SecurityGroupID []*string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// whether support networking enhancement.
	SriovNetSupport *string `json:"sriovNetSupport,omitempty" tf:"sriov_net_support,omitempty"`

	// The ID of subnet. the instance will use the subnet in the current region.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	SystemDisk []SystemDiskObservation `json:"systemDisk,omitempty" tf:"system_disk,omitempty"`

	// the tags of the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The user data to be specified into this instance. Must be encrypted in base64 format and limited in 16 KB. only effective when image support cloud-init.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type InstanceParameters struct {

	// Whether to create EBS volumes from snapshots in the custom image, default is false.
	// +kubebuilder:validation:Optional
	AutoCreateEBS *bool `json:"autoCreateEbs,omitempty" tf:"auto_create_ebs,omitempty"`

	// charge type of the instance.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// The size of the local SSD disk.
	// +kubebuilder:validation:Optional
	DataDiskGb *float64 `json:"dataDiskGb,omitempty" tf:"data_disk_gb,omitempty"`

	// +kubebuilder:validation:Optional
	DataDisks []DataDisksParameters `json:"dataDisks,omitempty" tf:"data_disks,omitempty"`

	// Add instance being created to a disaster tolerance group. It will be quit the disaster tolerance group, if this field change to null.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/kec/v1alpha1.DataGuardGroup
	// +kubebuilder:validation:Optional
	DataGuardID *string `json:"dataGuardId,omitempty" tf:"data_guard_id,omitempty"`

	// Reference to a DataGuardGroup in kec to populate dataGuardId.
	// +kubebuilder:validation:Optional
	DataGuardIDRef *v1.Reference `json:"dataGuardIdRef,omitempty" tf:"-"`

	// Selector for a DataGuardGroup in kec to populate dataGuardId.
	// +kubebuilder:validation:Optional
	DataGuardIDSelector *v1.Selector `json:"dataGuardIdSelector,omitempty" tf:"-"`

	// DNS1 of the primary network interface.
	// +kubebuilder:validation:Optional
	Dns1 *string `json:"dns1,omitempty" tf:"dns1,omitempty"`

	// DNS2 of the primary network interface.
	// +kubebuilder:validation:Optional
	Dns2 *string `json:"dns2,omitempty" tf:"dns2,omitempty"`

	// Indicate whether to delete instance directly or not.
	// +kubebuilder:validation:Optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// Indicate whether to reinstall system.
	// +kubebuilder:validation:Optional
	ForceReinstallSystem *bool `json:"forceReinstallSystem,omitempty" tf:"force_reinstall_system,omitempty"`

	// The hostname of the instance. only effective when image support cloud-init.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// name of iam role.
	// +kubebuilder:validation:Optional
	IAMRoleName *string `json:"iamRoleName,omitempty" tf:"iam_role_name,omitempty"`

	// The ID for the image to use for the instance.
	// +kubebuilder:validation:Optional
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// The name of instance, which contains 2-64 characters and only support Chinese, English, numbers.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Password to an instance is a string of 8 to 32 characters.
	// +kubebuilder:validation:Optional
	InstancePasswordSecretRef *v1.SecretKeySelector `json:"instancePasswordSecretRef,omitempty" tf:"-"`

	// The state of instance.
	// +kubebuilder:validation:Optional
	InstanceStatus *string `json:"instanceStatus,omitempty" tf:"instance_status,omitempty"`

	// The type of instance to start. <br> - NOTE: it's may trigger this instance to power off, if instance type will be demotion.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Keep the initial settings of the custom image.
	// +kubebuilder:validation:Optional
	KeepImageLogin *bool `json:"keepImageLogin,omitempty" tf:"keep_image_login,omitempty"`

	// The certificate id of the instance.
	// +kubebuilder:validation:Optional
	KeyID []*string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// When the local data disk opens, the snapshot id is entered.
	// +kubebuilder:validation:Optional
	LocalVolumeSnapshotID *string `json:"localVolumeSnapshotId,omitempty" tf:"local_volume_snapshot_id,omitempty"`

	// Instance private IP address can be specified when you creating new instance.
	// +kubebuilder:validation:Optional
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// The project instance belongs to.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The duration that you will buy the resource.
	// +kubebuilder:validation:Optional
	PurchaseTime *float64 `json:"purchaseTime,omitempty" tf:"purchase_time,omitempty"`

	// Security Group to associate with.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/vpc/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID []*string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// References to SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRefs []v1.Reference `json:"securityGroupIdRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// whether support networking enhancement.
	// +kubebuilder:validation:Optional
	SriovNetSupport *string `json:"sriovNetSupport,omitempty" tf:"sriov_net_support,omitempty"`

	// The ID of subnet. the instance will use the subnet in the current region.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SystemDisk []SystemDiskParameters `json:"systemDisk,omitempty" tf:"system_disk,omitempty"`

	// the tags of the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The user data to be specified into this instance. Must be encrypted in base64 format and limited in 16 KB. only effective when image support cloud-init.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type SystemDiskObservation struct {

	// The size of the data disk. value range: [20, 500].
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// System disk type. `Local_SSD`, Local SSD disk. `SSD3.0`, The SSD cloud disk. `EHDD`, The EHDD cloud disk, `ESSD_SYSTEM_PL0`, The x7 machine type ESSD disk, `ESSD_SYSTEM_PL1`, The x7 machine type ESSD disk, `ESSD_SYSTEM_PL2`, The x7 machine type ESSD disk.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`
}

type SystemDiskParameters struct {

	// The size of the data disk. value range: [20, 500].
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// System disk type. `Local_SSD`, Local SSD disk. `SSD3.0`, The SSD cloud disk. `EHDD`, The EHDD cloud disk, `ESSD_SYSTEM_PL0`, The x7 machine type ESSD disk, `ESSD_SYSTEM_PL1`, The x7 machine type ESSD disk, `ESSD_SYSTEM_PL2`, The x7 machine type ESSD disk.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Instance is the Schema for the Instances API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ksyun}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.chargeType)",message="chargeType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.imageId)",message="imageId is a required parameter"
	Spec   InstanceSpec   `json:"spec"`
	Status InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
