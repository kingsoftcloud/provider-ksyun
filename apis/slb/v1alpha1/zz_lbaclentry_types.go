/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LbAclEntryObservation struct {

	// The information of the load balancer Acl's cidr block.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ID of the LB ACL entry.
	LoadBalancerACLEntryID *string `json:"loadBalancerAclEntryId,omitempty" tf:"load_balancer_acl_entry_id,omitempty"`

	// The ID of the load balancer acl.
	LoadBalancerACLID *string `json:"loadBalancerAclId,omitempty" tf:"load_balancer_acl_id,omitempty"`

	// protocol.Valid Values:'ip'.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The action of load balancer Acl rule. Valid Values:'allow', 'deny'. Default is 'allow'.
	RuleAction *string `json:"ruleAction,omitempty" tf:"rule_action,omitempty"`

	// The information of the load balancer Acl's rule priority. value range:[1-32766].
	RuleNumber *float64 `json:"ruleNumber,omitempty" tf:"rule_number,omitempty"`
}

type LbAclEntryParameters struct {

	// The information of the load balancer Acl's cidr block.
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The ID of the load balancer acl.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/slb/v1alpha1.LbAcl
	// +kubebuilder:validation:Optional
	LoadBalancerACLID *string `json:"loadBalancerAclId,omitempty" tf:"load_balancer_acl_id,omitempty"`

	// Reference to a LbAcl in slb to populate loadBalancerAclId.
	// +kubebuilder:validation:Optional
	LoadBalancerACLIDRef *v1.Reference `json:"loadBalancerAclIdRef,omitempty" tf:"-"`

	// Selector for a LbAcl in slb to populate loadBalancerAclId.
	// +kubebuilder:validation:Optional
	LoadBalancerACLIDSelector *v1.Selector `json:"loadBalancerAclIdSelector,omitempty" tf:"-"`

	// protocol.Valid Values:'ip'.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The action of load balancer Acl rule. Valid Values:'allow', 'deny'. Default is 'allow'.
	// +kubebuilder:validation:Optional
	RuleAction *string `json:"ruleAction,omitempty" tf:"rule_action,omitempty"`

	// The information of the load balancer Acl's rule priority. value range:[1-32766].
	// +kubebuilder:validation:Optional
	RuleNumber *float64 `json:"ruleNumber,omitempty" tf:"rule_number,omitempty"`
}

// LbAclEntrySpec defines the desired state of LbAclEntry
type LbAclEntrySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LbAclEntryParameters `json:"forProvider"`
}

// LbAclEntryStatus defines the observed state of LbAclEntry.
type LbAclEntryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LbAclEntryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LbAclEntry is the Schema for the LbAclEntrys API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ksyun}
type LbAclEntry struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.cidrBlock)",message="cidrBlock is a required parameter"
	Spec   LbAclEntrySpec   `json:"spec"`
	Status LbAclEntryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LbAclEntryList contains a list of LbAclEntrys
type LbAclEntryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LbAclEntry `json:"items"`
}

// Repository type metadata.
var (
	LbAclEntry_Kind             = "LbAclEntry"
	LbAclEntry_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LbAclEntry_Kind}.String()
	LbAclEntry_KindAPIVersion   = LbAclEntry_Kind + "." + CRDGroupVersion.String()
	LbAclEntry_GroupVersionKind = CRDGroupVersion.WithKind(LbAclEntry_Kind)
)

func init() {
	SchemeBuilder.Register(&LbAclEntry{}, &LbAclEntryList{})
}
