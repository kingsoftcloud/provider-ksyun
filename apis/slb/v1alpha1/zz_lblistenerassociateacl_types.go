/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LbListenerAssociateAclObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the listener.
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// The ID of the load balancer acl.
	LoadBalancerACLID *string `json:"loadBalancerAclId,omitempty" tf:"load_balancer_acl_id,omitempty"`
}

type LbListenerAssociateAclParameters struct {

	// The ID of the listener.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/slb/v1alpha1.LbListener
	// +kubebuilder:validation:Optional
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a LbListener in slb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a LbListener in slb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// The ID of the load balancer acl.
	// +crossplane:generate:reference:type=github.com/kingsoftcloud/provider-ksyun/apis/slb/v1alpha1.LbAcl
	// +kubebuilder:validation:Optional
	LoadBalancerACLID *string `json:"loadBalancerAclId,omitempty" tf:"load_balancer_acl_id,omitempty"`

	// Reference to a LbAcl in slb to populate loadBalancerAclId.
	// +kubebuilder:validation:Optional
	LoadBalancerACLIDRef *v1.Reference `json:"loadBalancerAclIdRef,omitempty" tf:"-"`

	// Selector for a LbAcl in slb to populate loadBalancerAclId.
	// +kubebuilder:validation:Optional
	LoadBalancerACLIDSelector *v1.Selector `json:"loadBalancerAclIdSelector,omitempty" tf:"-"`
}

// LbListenerAssociateAclSpec defines the desired state of LbListenerAssociateAcl
type LbListenerAssociateAclSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LbListenerAssociateAclParameters `json:"forProvider"`
}

// LbListenerAssociateAclStatus defines the observed state of LbListenerAssociateAcl.
type LbListenerAssociateAclStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LbListenerAssociateAclObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LbListenerAssociateAcl is the Schema for the LbListenerAssociateAcls API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ksyun}
type LbListenerAssociateAcl struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LbListenerAssociateAclSpec   `json:"spec"`
	Status            LbListenerAssociateAclStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LbListenerAssociateAclList contains a list of LbListenerAssociateAcls
type LbListenerAssociateAclList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LbListenerAssociateAcl `json:"items"`
}

// Repository type metadata.
var (
	LbListenerAssociateAcl_Kind             = "LbListenerAssociateAcl"
	LbListenerAssociateAcl_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LbListenerAssociateAcl_Kind}.String()
	LbListenerAssociateAcl_KindAPIVersion   = LbListenerAssociateAcl_Kind + "." + CRDGroupVersion.String()
	LbListenerAssociateAcl_GroupVersionKind = CRDGroupVersion.WithKind(LbListenerAssociateAcl_Kind)
)

func init() {
	SchemeBuilder.Register(&LbListenerAssociateAcl{}, &LbListenerAssociateAclList{})
}
